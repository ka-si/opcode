Write a c program to implement the producer-consumer problem



#include <stdio.h>
#include <stdlib.h>

// Initialize a (Semaphore) mutex to 1
int mutex=1;

// Number of full slots as
int full = 0;

// Number of empty slots as size of buffer
int empty = 3, x = 0;

// Function to produce an item and add it to the buffer
void producer() {
    // Decrease mutex value by 1
    --mutex;
    
    // Increase the number of full slots by 1
    ++full;
    
    // Decrease the number of empty slots by 1
    --empty;

    // Item produced
    x++;
    printf("\nProducer produces item = %d", x);

    // Increase mutex value by 1
    ++mutex;
}

// Function to consume an item and remove it from the buffer
void consumer() {
    // Decrease mutex value by 1
    --mutex;

    // Decrease the number of full slots by 1
    --full;

    // Increase the number of empty slots by 1
    ++empty;

    printf("\nConsumer consumes item = %d", x);

    // Increase mutex value by 1
    ++mutex;
}

int main() {
    int n, i;

    printf("\n1. Press 1 for Producer");
    printf("\n2. Press 2 for Consumer");

    for (i = 1; i > 0; i++) {
        printf("\nEnter your choice:");
        scanf("%d", &n);

        // Switch Cases
        switch (n) {
            case 1:
                // If mutex is 1 and empty is non-zero, then it is possible to produce
                if ((mutex == 1) && (empty != 0))
                    producer();
                else
                    printf("Buffer is full");
                break;
            case 2:
                // If mutex is 1 and full is non-zero, then it is possible to consume
                if ((mutex == 1) && (full != 0))
                    consumer();
                else
                    printf("Buffer is empty");
                break;
        }
    }

    return 0;
}

